---
// src/components/TeacherModal.astro
// 1. INTERFAZ MODIFICADA: 'songs' ahora incluye la propiedad opcional 'ensemble'
export interface Props {
    teachers: Array<{
        id: string;
        name: string;
        gender: "M" | "F";
        image: string;
        songs: Array<{
            title: string;
            author: string;
            duration: string;
            move?: string;
            ensemble?: string; // <-- NUEVA PROPIEDAD PARA GRUPOS
            extraInfo?: string;
            students: Array<{
                name: string;
                instrument: string;
            }>;
        }>;
    }>;
}

const { teachers } = Astro.props;
---

<!-- Modal Container -->
<div
    id="modal-container"
    class="fixed inset-0 z-50 hidden items-center justify-center bg-black bg-opacity-50 backdrop-blur-sm"
>
    <div
        id="modal-content"
        class="bg-white rounded-lg shadow-2xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto transform scale-95 transition-transform duration-300"
    >
        <!-- El contenido se genera dinámicamente -->
    </div>
</div>

<script define:vars={{ teachers }}>
    // Hacer los datos de los profesores disponibles globalmente
    window.teachersData = {};
    teachers.forEach((teacher) => {
        window.teachersData[teacher.id] = teacher;
    });

    // --- Funcionalidad del modal ---
    document.addEventListener("DOMContentLoaded", () => {
        const modal = document.getElementById("modal-container");
        const modalContent = document.getElementById("modal-content");

        // Abrir modal al hacer clic en una tarjeta de profesor
        document.addEventListener("click", (e) => {
            const card = e.target.closest("[data-teacher-id]");
            if (card) {
                const teacherId = card.dataset.teacherId;
                openTeacherModal(teacherId);
            }
        });

        // Cerrar modal al hacer clic fuera del contenido
        modal?.addEventListener("click", (e) => {
            if (e.target === modal) {
                closeModal();
            }
        });

        // Cerrar modal con la tecla Escape
        document.addEventListener("keydown", (e) => {
            if (e.key === "Escape") {
                closeModal();
            }
        });

        function openTeacherModal(teacherId) {
            const teacherData = getTeacherData(teacherId);
            if (!teacherData || !modalContent) return;

            modalContent.innerHTML = generateModalContent(teacherData);
            modal?.classList.remove("hidden");
            modal?.classList.add("flex");

            setTimeout(() => {
                modalContent.classList.remove("scale-95");
                modalContent.classList.add("scale-100");
            }, 10);
        }

        window.closeModal = function closeModal() {
            if (!modal || !modalContent) return;
            modalContent.classList.remove("scale-100");
            modalContent.classList.add("scale-95");
            setTimeout(() => {
                modal.classList.add("hidden");
                modal.classList.remove("flex");
            }, 300);
        };

        function getTeacherData(teacherId) {
            const teacher = window.teachersData[teacherId];
            if (!teacher) {
                console.error(
                    `No se encontraron datos para el profesor con ID: ${teacherId}`
                );
                return null;
            }

            const instruments = {
                "teacher-1": "Clarinete",
                "teacher-2": "Piano",
            };

            return {
                ...teacher,
                instrument: instruments[teacherId] || "Instrumento",
            };
        }

        // 2. UI MODIFICADA: Se renderiza el nombre del ensamble y se mejora la lógica de visualización de alumnos
        function generateModalContent(teacher) {
            return `
                <div class="p-8">
                    <div class="flex items-center justify-between mb-8">
                        <div class="flex items-center space-x-4">
                            <div class="w-20 h-20 rounded-full bg-gradient-to-br from-orange-400 to-red-500 flex items-center justify-center shadow-lg">
                                <img src="${teacher.image}" alt="${teacher.name}" class="w-16 h-16 object-cover rounded-full filter contrast-125 saturate-150" />
                            </div>
                            <div>
                                <h2 class="text-3xl font-black text-gray-900 transform -rotate-1">${teacher.name}</h2>
                                <p class="text-xl font-bold text-orange-600 transform rotate-1">${teacher.instrument}</p>
                            </div>
                        </div>
                        <button onclick="closeModal()" class="text-gray-500 hover:text-gray-700 text-2xl font-bold">×</button>
                    </div>

                    <div class="space-y-6">
                        <h3 class="text-2xl font-black text-gray-900 mb-4 transform -rotate-1 border-b-4 border-yellow-400 pb-2 inline-block">
                            PROGRAMA MUSICAL
                        </h3>
                        
                        ${teacher.songs
                            .map(
                                (song) => `
                            <div class="bg-gradient-to-r from-yellow-100 to-orange-100 p-6 rounded-lg border-4 border-black shadow-[8px_8px_0px_0px_rgba(0,0,0,1)] transform hover:shadow-[12px_12px_0px_0px_rgba(0,0,0,1)] transition-all duration-200 hover:-translate-x-1 hover:-translate-y-1">
                                <div class="flex justify-between items-start mb-4">
                                    <div>
                                        <h4 class="text-xl font-black text-gray-900 transform -rotate-1">${song.title}</h4>
                                        ${song.author ? `<p class="text-sm font-bold text-gray-600">${song.author}</p>` : ""}
                                        ${song.extraInfo ? `<p class="text-xs text-gray-500 italic mt-2">${song.extraInfo}</p>` : ""}
                                        ${song.move ? `<p class="text-md font-semibold text-orange-700 italic transform -rotate-1 mt-1">${song.move}</p>` : ""}
                                    </div>
                                    <span class="bg-red-500 text-white px-3 py-1 rounded-full font-bold text-sm transform rotate-2">${song.duration}</span>
                                </div>
                                
                                <div class="mt-4">
                                    ${/* Se añade el nombre del ensamble aquí */ ""}
                                    ${song.ensemble ? `<p class="text-lg font-black text-gray-800 mb-3 transform -rotate-1">${song.ensemble}</p>` : ""}
                                    
                                    ${/* Lógica mejorada: solo mostrar la sección de alumnos si el array no está vacío */ ""}
                                    ${
                                        song.students &&
                                        song.students.length > 0
                                            ? `
                                        <div class="flex flex-wrap items-center -mb-2">
                                            <p class="font-bold text-gray-700 mb-2 mr-3">Alumnos:</p>
                                            ${song.students
                                                .map(
                                                    (student) => `
                                                <div class="flex items-center bg-white px-3 py-1 rounded-full border-2 border-black text-sm mr-2 mb-2 transform hover:rotate-1 transition-transform duration-200 shadow-md">
                                                    <span class="font-bold">${student.name}</span>
                                                    ${
                                                        student.instrument != ""
                                                            ? `<span class="ml-2 bg-gray-200 text-gray-600 px-2 py-0.5 rounded-md text-xs font-semibold">${student.instrument}</span>`
                                                            : ""
                                                    }
                                                </div>
                                            `
                                                )
                                                .join("")}
                                        </div>
                                    `
                                            : ""
                                    }
                                </div>
                            </div>
                        `
                            )
                            .join("")}
                    </div>
                </div>
            `;
        }
    });
</script>
